init_string = """
	.INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
	.INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
"""

# List of bytes in bitstream to write to string literal
byte_list = []

with open("bitstream.bit") as bitstream_file:
	bit_count = 0
	current_byte = ""
	for line in bitstream_file:
		current_byte = line[0] + current_byte # Add bit to current byte
		bit_count += 1
		if (bit_count == 4): # If we have 4 bits, add the completed byte to the list
			byte_list.append(current_byte)
			bit_count = 0
			current_byte = ""

	# If the bistream file !(BIT_LENGTH % 4 == 0), then we need to add 0's to the last byte to make a complete 4-bit byte.
	if (len(current_byte) != 0):
		current_byte = "0"*(4-len(current_byte)) + current_byte
		byte_list.append(current_byte)


STRING_LINE_INCREMENT = 146 # Increment the	init_string index STRING_LINE_INCREMENT times to get to the first byte of the next row
string_index =	init_string.find(')')-1 # Index starts at the last '0' of the first row of the	init_string

# Go through the byte list, replace the bytes in	init_string with the bytes from the bitstream
for byte in byte_list:

	# Replace the byte at the current index with the byte from byte_list
	init_string =	init_string[:string_index] + hex(int(byte, 2))[2:] +	init_string[string_index+1:]

	string_index -= 1
	if (init_string[string_index] != "0"): # If we reached the end of a row in the	init_string, go to next row
		string_index += STRING_LINE_INCREMENT


with open("new_bitstream.bit", "w") as bitstream_file:
	bitstream_file.write(init_string)